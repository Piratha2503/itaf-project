#------------------------------common Success code----------------------------------------------------
code.success.common=20000
code.failure.common=40000
code.failure.file=80000
#------------------------------common Failure Message----------------------------------------------------
message.file.failure.common=Invalid File Format
message.validation.header.notExits=Header is not matched with the Database Please Provide the Valid Header
#------------------------------Project Message-----------------------------------------------------------
message.success.save.project=Project added successfully
message.validation.project.code.alreadyExists=Project Code Already Exists 
message.validation.project.Name.alreadyExists=Project Name Already Exists
message.validation.project.notExits=Project Not Exists
message.validation.project.alreadyExists=Project Already Exists
message.success.update.project=Project Updated Successfully
message.success.getAll.project=All Project Retrieved SuccessFully
message.success.get.project=Project Retrieved SuccessFully for the Given id
message.success.delete.project=Project Successfully Deleted for given id
message.validation.project.file=Project Import Error Validations Row Numbers
message.validation.save.project=Project Not Save successfully
message.validation.project.file.name.empty=import File project Name is Empty
message.validation.project.file.code.empty=import File project Code is Empty
message.validation.project.file.description.empty=import File project Description is Empty
message.validation.project.dependent=Other Module is Dependent on this Project
message.validation.project.name.duplicate=Project Name is Duplicate with in the file
message.validation.project.code.duplicate=Project Code is Duplicate with in the file
#------------------------------Project Code-----------------------------------------------------------
code.validation.project.alreadyExists=11000
code.validation.project.notExists=10001
code.validation.project.dependent=13000
#------------------------------Main Module Message & Codes-----------------------------------------------------------
message.success.mainModules.save=Main Module Successfully Inserted
message.success.mainModules.update=Main Module Successfully Updated
message.success.mainModules.delete=Main Module Successfully Deleted
message.success.mainModules.view=Main Module Successfully View
message.failure.module.Id.NotFound=Module Id Not Found
message.failure.module.Id.NotAssigned=Module Id Does not Assigned in Main Modules
Message.validation.module.Id.AssignedWithAnotherTable=This Main Module Id Assign in Another Table
message.failure.mainModules.prefix.AlreadyExist=Prefix Already Exist
message.failure.mainModules.name.AlreadyExist=Main Module Name Already Exist
message.failure.mainModulesId.NotFound=Main Module Id Not Found
message.validation.mainModule.notExists = Main Module Not Exist 
message.validation.NotSave.mainModules=Test Types Import Error Validations Row Numbers
#------------------------------Main Module Codes-----------------------------------------------------------
code.validation.mainModules.alreadyExists=30000
code.validation.mainModules.notExists = 31000
#------------------------------Project code-----------------------------------------------------------
message.failure.module.IdNotFound=Module Id Not Found
message.failure.module.IdNotAssigned=Module Id Does not Assigned in Main Modules
Message.validation.module.IdAssignedWithAnotherTable=This Main Module Id Assign in Another Table
message.failure.mainModules.prefixAlreadyExist=Prefix Already Exist
message.failure.mainModules.nameAlreadyExist=Main Module Name Already Exist
message.failure.mainModulesIdNotFound=Main Module Id Not Found
code.validation.Mainmodule.alreadyExists=30000
#------------------------------Modules Message-----------------------------------------------------------
message.success.save.module=Module added successfully
message.validation.module.name.alreadyExists=Module name already Exists
message.validation.module.prefix.alreadyExists=Module Prefix already Exists
message.validation.module.notExists=Module not exists
message.success.getAll.module=All module retrieved successfully
message.success.getById.module=Module get successfully for given id
message.success.getByProjectId.module=Module successfully  get by given projectId
message.success.update.module=Module updated successfully
message.success.delete.module=Module deleted successfully
message.validation.module.notHaveProject=No Modules have given ProjectId
message.validation.module.assigned=Other Module depend on this Module
message.validation.module.file.error=Module Import Error Validations Row Numbers
message.validation.module.file.name.empty=import File Module Name is Empty
message.validation.module.file.prefix.empty=import File Module prefix is Empty
message.validation.save.module=module not save
message.validation.module.file.projectId.empty=import File projectId is Empty
message.validation.module.name.duplicate=Module Name is Duplicate with in the file
message.validation.module.prefix.duplicate=Module Prefix is Duplicate with in the file
message.validation.module.file.empty=Module import file Empty
#------------------------------Modules Code-----------------------------------------------------------
code.validation.module.alreadyExists=21000
code.validation.module.notExists=20001
code.validation.module.dependent=23000
#------------------------------SubModules Message-----------------------------------------------------------
message.success.save.subModule=SubModule added successfully
message.validation.subModule.Name.alreadyExists=SubModules Name Already Exists
message.validation.subModule.prefix.alreadyExists=SubModules Prefix Already Exists
message.validation.subModule.notExists=SubModules Not Exists 
message.success.update.subModule=SubModule Updated successfully
message.success.get.subModules=SubModule Retried SuccessFully for given id
message.success.getAll.subModule=Get ALL SubModule Successfully
message.success.delete.subModule=Delete SubModule Successfully
message.validation.get.mainModule.notHave=No SubModule have the given Main ModuleId
message.validation.subModules.dependent=Other Module is Dependent on this SubModule
message.validation.subModule.file.name.empty=import File SubModule Name is Empty 
message.validation.subModule.file.main_module_id.empty=import File SubModule, Main_Module_Id is Empty 
message.validation.subModule.file.prefix.empty=import File SubModule Prefix is Empty 
message.validation.subModule.file=SubModule Import Error Validations Row Numbers
message.validation.save.subModule=SubModule Not Save Successfully
message.validation.subModule.name.duplicate=SubModule Name is Duplicate with in the file
message.validation.subModule.prefix.duplicate=SubModule Prefix is Duplicate with in the file
#------------------------------SubModules Code-----------------------------------------------------------
code.validation.subModules.alreadyExists=41000
code.validation.subModules.notExists=40001
code.validation.subModules.dependent=43000
#------------------------------TestCases Message-----------------------------------------------------------
message.success.save.testcases=TestCase added successfully
message.validation.testCases.notExists=TestCases Not Exists
message.validation.testCases.name.alreadyExists=TestCases Name Already Exists
message.success.getAll.testCases=All TestCases retrieved successfully
message.success.getById.testCase=TestCase get successfully for given id
message.success.getBySubModuleId.testCase=testCase successfully  get by given SubModuleId
message.success.update.testCase=TestCase updated successfully
message.success.delete.testCase=TestCase deleted successfully
message.validation.testCase.notHaveSubModule=No TestCase have given SubModuleId
message.validation.testCase.assigned=Other Module depend on this TestCase
message.validation.testcase.file.name.empty=import File TestCase Name is Empty
message.validation.testcase.file.error=Testcases Import Error Validations Row Numbers
message.validation.save.testcase=testcase not save
message.validation.testcase.name.duplicate=TestCase Name is Duplicate with in the file
message.validation.testcase.file.submoduleId.empty=import file Testcase,SubmoduleId Empty
#------------------------------TestCase Code-----------------------------------------------------------
code.validation.testCases.alreadyExists=51000
code.validation.testCases.notExists=50001
code.validation.testcases.dependent=53000
#------------------------------TestGrouping Message-----------------------------------------------------------
message.validation.testGrouping.Name.alreadyExists=Test Grouping Name Already Exists
message.validation.testGrouping.notExists=TestGrouping Not Exists
message.success.save.testGrouping=TestGrouping added SuccessFully
message.success.get.testGrouping=TestGrouping Retried SuccessFully for given id
message.success.getAll.testGrouping=Get All TestGrouping Successfully
message.validation.get.testGrouping.notHave.testCase=No TestGrouping have given TestCasesId
message.validation.get.testGrouping.notHave.testType=No TestGrouping have given TestTypeId
message.validation.delete.testGrouping=Successfully deleted TestGrouping
message.validation.save.testGroup=Test Grouping not save Successfully
message.validation.testGroup.file=Test Grouping  Import Error Validations Row Numbers
message.validation.testGroup.file.name.empty=Test Grouping File Name is empty
message.validation.testGroup.file.test_type_id.empty=Test Grouping File test_type_id is empty
message.validation.testGroup.file.test_case_id.empty=Test Grouping File test_case_id is empty
message.validation.testGrouping.name.duplicate=TestGrouping Name is Duplicate with in the file
#------------------------------TestGrouping Code-----------------------------------------------------------
code.validation.testGrouping.alreadyExists=71000
code.validation.testGrouping.notExists=70001
#------------------------------Test Type codes-----------------------------------------------------------
code.validation.testType.alreadyExists=61000
code.validation.testTypes.notExists=60001
#------------------------------Test Type messages-----------------------------------------------------------
message.success.insert.TestTypes=Test Type Successfully Inserted
message.success.update.TestTypes=Test Type Successfully Updated
message.success.delete.TestTypes=Test Type Successfully Deleted
message.success.viewAll.TestTypes=Test Types Successfully View
message.success.view.TestTypeForId=Test Type for Given ID 
message.failure.TestTypeId.NotFound=Test Type id Not Found
message.failure.alreadyExist.TestTypeId=Test Type id Already Exist
message.failure.alreadyExist.TestTypename=Test Type Name Already Exist with another Id
message.validation.testTypes.notExists=Test Types Not Exists
message.validation.NotSave.TestTypes=Test Types Import Error Validations Row Numbers

